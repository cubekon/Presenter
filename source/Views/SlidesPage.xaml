<Page
    x:Class="Presenter.Views.SlidesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Presenter.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    d:Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <!-- Increase FontSize of TabView Heade r-->
                    <x:Double x:Key="TabViewItemHeaderFontSize">16</x:Double>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="TabViewCloseButtonStyle" TargetType="Button">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}"/>
                <Setter Property="FontSize" Value="{ThemeResource TabViewItemHeaderCloseFontSize}"/>
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                <Setter Property="Width" Value="{ThemeResource TabViewItemHeaderCloseButtonWidth}"/>
                <Setter Property="Height" Value="{ThemeResource TabViewItemHeaderCloseButtonHeight}"/>
                <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderCloseButtonBackground}"/>
                <Setter Property="Foreground" Value="{ThemeResource TabViewItemHeaderCloseButtonForeground}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderBrush}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderThickness}"/>
                <Setter Property="FocusVisualMargin" Value="-3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" CornerRadius="{ThemeResource ControlCornerRadius}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBackgroundPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonForegroundPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderBrushPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBackgroundPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonForegroundPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderBrushPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabViewItemStyle" TargetType="muxc:TabViewItem">
                <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderBackground}"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                <Setter Property="MinHeight" Value="{ThemeResource TabViewItemMinHeight}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource TabViewItemBorderThickness}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource TabViewItemBorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="muxc:TabViewItem">
                            <Grid x:Name="LayoutRoot" Padding="{TemplateBinding Padding}" UseLayoutRounding="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="LeftColumn" Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition x:Name="RightColumn" Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="LayoutRootScale"/>
                                </Grid.RenderTransform>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPointerOver}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}"/>
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}"/>
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonBackground}"/>
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonForeground}"/>
                                                <Setter Target="TabSeparator.Opacity" Value="0"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPressed}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}"/>
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}"/>
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonBackground}"/>
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonForeground}"/>
                                                <Setter Target="TabSeparator.Opacity" Value="0"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter Target="BottomBorderLine.Visibility" Value="Collapsed"/>
                                                <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible"/>
                                                <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible"/>
                                                <Setter Target="SelectedBackgroundPath.Visibility" Value="Visible"/>
                                                <Setter Target="SelectedBackgroundPath.Fill" Value="Transparent"/>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource CustomTabBackgroundBrush}"/>
                                                <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}"/>
                                                <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}"/>
                                                <Setter Target="TabContainer.BorderThickness" Value="{ThemeResource TabViewSelectedItemBorderThickness}"/>
                                                <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}"/>
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}"/>
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}"/>
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}"/>
                                                <Setter Target="LayoutRoot.Background" Value="Transparent"/>
                                                <Setter Target="ContentPresenter.FontWeight" Value="SemiBold"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="BottomBorderLine.Visibility" Value="Collapsed"/>
                                                <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible"/>
                                                <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible"/>
                                                <Setter Target="SelectedBackgroundPath.Visibility" Value="Visible"/>
                                                <Setter Target="SelectedBackgroundPath.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}"/>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}"/>
                                                <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}"/>
                                                <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}"/>
                                                <Setter Target="TabContainer.BorderThickness" Value="{ThemeResource TabViewSelectedItemBorderThickness}"/>
                                                <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}"/>
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}"/>
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}"/>
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}"/>
                                                <Setter Target="LayoutRoot.Background" Value="Transparent"/>
                                                <Setter Target="ContentPresenter.FontWeight" Value="SemiBold"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="BottomBorderLine.Visibility" Value="Collapsed"/>
                                                <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible"/>
                                                <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible"/>
                                                <Setter Target="SelectedBackgroundPath.Visibility" Value="Visible"/>
                                                <Setter Target="SelectedBackgroundPath.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}"/>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}"/>
                                                <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}"/>
                                                <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}"/>
                                                <Setter Target="TabContainer.BorderThickness" Value="{ThemeResource TabViewSelectedItemBorderThickness}"/>
                                                <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}"/>
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}"/>
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}"/>
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}"/>
                                                <Setter Target="LayoutRoot.Background" Value="Transparent"/>
                                                <Setter Target="ContentPresenter.FontWeight" Value="SemiBold"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled"/>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundDisabled}"/>
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}"/>
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewButtonForegroundDisabled}"/>
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonBackground}"/>
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonForeground}"/>
                                                <Setter Target="CloseButton.BorderBrush" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderBrushDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DataVirtualizationStates">
                                        <VisualState x:Name="DataAvailable"/>
                                        <VisualState x:Name="DataPlaceholder"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ReorderHintStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="NoReorderHint"/>
                                        <VisualState x:Name="BottomReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="TopReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation Direction="Top" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="RightReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LeftReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation Direction="Left" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DragStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="NotDragging"/>
                                        <VisualState x:Name="Dragging">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="LayoutRoot" To="{ThemeResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity"/>
                                                <DragItemThemeAnimation TargetName="LayoutRoot"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="DraggingTarget"/>
                                        <VisualState x:Name="MultipleDraggingPrimary"/>
                                        <VisualState x:Name="MultipleDraggingSecondary"/>
                                        <VisualState x:Name="DraggedPlaceholder"/>
                                        <VisualState x:Name="Reordering">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="LayoutRoot" To="{ThemeResource ListViewItemReorderThemeOpacity}" Storyboard.TargetProperty="Opacity"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="ReorderingTarget">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="LayoutRoot" To="{ThemeResource ListViewItemReorderTargetThemeOpacity}" Storyboard.TargetProperty="Opacity"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MultipleReorderingPrimary"/>
                                        <VisualState x:Name="ReorderedPlaceholder">
                                            <Storyboard>
                                                <FadeOutThemeAnimation TargetName="LayoutRoot"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="DragOver">
                                            <Storyboard>
                                                <DropTargetItemThemeAnimation TargetName="LayoutRoot"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="IconStates">
                                        <VisualState x:Name="Icon"/>
                                        <VisualState x:Name="NoIcon">
                                            <VisualState.Setters>
                                                <Setter Target="IconBox.Visibility" Value="Collapsed"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="TabWidthModes">
                                        <VisualState x:Name="StandardWidth"/>
                                        <VisualState x:Name="Compact">
                                            <VisualState.Setters>
                                                <Setter Target="IconBox.Margin" Value="0,0,0,0"/>
                                                <Setter Target="ContentPresenter.Visibility" Value="Collapsed"/>
                                                <Setter Target="IconColumn.Width" Value="{ThemeResource TabViewItemHeaderIconSize}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CloseIconStates">
                                        <VisualState x:Name="CloseButtonVisible"/>
                                        <VisualState x:Name="CloseButtonCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="CloseButton.Visibility" Value="Collapsed"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup>
                                        <VisualState x:Name="ForegroundNotSet"/>
                                        <VisualState x:Name="ForegroundSet">
                                            <VisualState.Setters>
                                                <Setter Target="IconControl.Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup>
                                        <VisualState x:Name="NormalBottomBorderLine"/>
                                        <VisualState x:Name="LeftOfSelectedTab">
                                            <VisualState.Setters>
                                                <Setter Target="BottomBorderLine.Margin" Value="0,0,2,0"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="RightOfSelectedTab">
                                            <VisualState.Setters>
                                                <Setter Target="BottomBorderLine.Margin" Value="2,0,0,0"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="NoBottomBorderLine">
                                            <VisualState.Setters>
                                                <Setter Target="BottomBorderLine.Visibility" Value="Collapsed"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="BottomBorderLine" BorderBrush="{ThemeResource TabViewBorderBrush}" BorderThickness="1" Grid.ColumnSpan="3" Height="1" VerticalAlignment="Bottom"/>
                                <Path x:Name="LeftRadiusRenderArc" Data="M4 0C4 1.19469 3.47624 2.26706 2.64582 3H0C1.65685 3 3 1.65685 3 0H4Z" Fill="{ThemeResource TabViewBorderBrush}" Height="4" Margin="-4,0,0,0" VerticalAlignment="Bottom" Visibility="Collapsed" Width="4" x:Load="False"/>
                                <Path x:Name="RightRadiusRenderArc" Grid.Column="2" Data="M0 0C0 1.19469 0.523755 2.26706 1.35418 3H4C2.34315 3 1 1.65685 1 0H0Z" Fill="{ThemeResource TabViewBorderBrush}" Height="4" Margin="0,0,-4,0" VerticalAlignment="Bottom" Visibility="Collapsed" Width="4" x:Load="False"/>
                                <Path x:Name="SelectedBackgroundPath" Grid.ColumnSpan="3" Data="{Binding TabViewTemplateSettings.TabGeometry, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{ThemeResource TabViewItemHeaderBackgroundSelected}" Margin="-4,0,-4,0" VerticalAlignment="Bottom" Visibility="Collapsed" x:Load="False"/>
                                <Border x:Name="TabSeparator" BorderBrush="{ThemeResource TabViewItemSeparator}" BorderThickness="1" Grid.Column="1" HorizontalAlignment="Right" Margin="{ThemeResource TabViewItemSeparatorMargin}" Width="1"/>
                                <Grid x:Name="TabContainer" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Converter={StaticResource TopCornerRadiusFilterConverter}, Source={ThemeResource OverlayCornerRadius}}" Grid.Column="1" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" Control.IsTemplateFocusTarget="True" Padding="{ThemeResource TabViewItemHeaderPadding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="IconColumn" Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Viewbox x:Name="IconBox" MaxWidth="{ThemeResource TabViewItemHeaderIconSize}" Margin="{ThemeResource TabViewItemHeaderIconMargin}" MaxHeight="{ThemeResource TabViewItemHeaderIconSize}">
                                        <ContentControl x:Name="IconControl" Content="{Binding TabViewTemplateSettings.IconElement, RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{ThemeResource TabViewItemIconForeground}" HighContrastAdjustment="None" IsTabStop="False"/>
                                    </Viewbox>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="1" Content="" ContentTransitions="{TemplateBinding ContentTransitions}" Foreground="{ThemeResource TabViewItemHeaderForeground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{ThemeResource TabViewItemHeaderFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HighContrastAdjustment="None" OpticalMarginAlignment="TrimSideBearings" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Button x:Name="CloseButton" Grid.Column="2" Content="&#xE711;" HighContrastAdjustment="None" IsTextScaleFactorEnabled="False" IsTabStop="False" Margin="{ThemeResource TabViewItemHeaderCloseMargin}" Style="{ThemeResource TabViewCloseButtonStyle}"/>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.Resources>
            <ThemeShadow x:Name="SharedShadow" />
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="300" MaxWidth="500"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MaxHeight="300"/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <!-- Projector Live Output -->
        <Grid x:Name="DescriptionFrame" Grid.Column="1" Grid.ColumnSpan="2" Background="{ThemeResource CardBackgroundBrush}" CornerRadius="15" Margin="30,10,0,10" />

        <Viewbox x:Name="ProjectorViewBox" Stretch="Uniform" StretchDirection="Both" Margin="0" Shadow="{StaticResource SharedShadow}">
            <Grid Background="{ThemeResource ProjectorViewBoxBackgroundBrush}" MinHeight="100" CornerRadius="4">
                <!-- No Picture Template -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="1.4*"/>
                </Grid.RowDefinitions>
                <StackPanel Height="7" VerticalAlignment="Top" Background="{Binding ElementName=ProjectorScreenFrame, Path=BorderBrush}" BorderThickness="0" Orientation="Horizontal" Margin="0,0,0,0">
                    <Rectangle Fill="Blue" Width="40"/>
                    <Rectangle Fill="Green" Width="40"/>
                    <Rectangle Fill="Red" Width="40"/>
                    <Rectangle Fill="Yellow" Width="40"/>
                </StackPanel>
                <FontIcon Grid.Row="1" FontFamily="Segoe MDL2 Assets" Glyph="&#xE790;" Foreground="LightGray" FontWeight="SemiLight"/>
                <TextBlock Grid.Row="2" CharacterSpacing="70" Text="KEIN BILD" Foreground="LightGray" FontWeight="SemiLight" TextAlignment="Center" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
        </Viewbox>

        <!-- TabView Section -->
        <Grid x:Name="TabViewFrame" Padding="0" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="2" Background="{ThemeResource CardBackgroundBrush}" CornerRadius="15" Margin="0,20,0,20" >
            <muxc:TabView Background="Transparent" Padding="4,10,0,0" VerticalAlignment="Stretch">
                <muxc:TabView.TabItems>

                    <muxc:TabViewItem Style="{StaticResource TabViewItemStyle}" Header="Lieder">
                        <muxc:TabViewItem.IconSource>
                            <muxc:BitmapIconSource UriSource="/Assets/TabViewIcons/change_me.png" ShowAsMonochrome="False" />
                        </muxc:TabViewItem.IconSource>

                        <muxc:TabViewItem.Content>
                            <local:SongPage/>
                        </muxc:TabViewItem.Content>
                    </muxc:TabViewItem>

                    <muxc:TabViewItem Header="Bibeltext">
                        <muxc:TabViewItem.IconSource>
                            <muxc:BitmapIconSource UriSource="/Assets/TabViewIcons/change_me.png" ShowAsMonochrome="False" />
                        </muxc:TabViewItem.IconSource>
                    </muxc:TabViewItem>
                    
                    <muxc:TabViewItem Header="Bilder">
                        <muxc:TabViewItem.IconSource>
                            <muxc:BitmapIconSource UriSource="/Assets/TabViewIcons/change_me.png" ShowAsMonochrome="False" />
                        </muxc:TabViewItem.IconSource>
                    </muxc:TabViewItem>
                    
                </muxc:TabView.TabItems>
            </muxc:TabView>

        </Grid>
    </Grid>
</Page>
